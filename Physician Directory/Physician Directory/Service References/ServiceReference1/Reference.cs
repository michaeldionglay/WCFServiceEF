//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Physician_Directory.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Physician", Namespace="http://schemas.datacontract.org/2004/07/PhysicianDirectoryService")]
    [System.SerializableAttribute()]
    public partial class Physician : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Physician_Directory.ServiceReference1.ContactInformation ContactInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Physician_Directory.ServiceReference1.Specialization SpecializationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Physician_Directory.ServiceReference1.ContactInformation ContactInformation {
            get {
                return this.ContactInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInformationField, value) != true)) {
                    this.ContactInformationField = value;
                    this.RaisePropertyChanged("ContactInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Physician_Directory.ServiceReference1.Specialization Specialization {
            get {
                return this.SpecializationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecializationField, value) != true)) {
                    this.SpecializationField = value;
                    this.RaisePropertyChanged("Specialization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactInformation", Namespace="http://schemas.datacontract.org/2004/07/PhysicianDirectoryService")]
    [System.SerializableAttribute()]
    public partial class ContactInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellphoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Physician_Directory.ServiceReference1.Physician PhysicianField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellphoneNumber {
            get {
                return this.CellphoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CellphoneNumberField, value) != true)) {
                    this.CellphoneNumberField = value;
                    this.RaisePropertyChanged("CellphoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeAddress {
            get {
                return this.HomeAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeAddressField, value) != true)) {
                    this.HomeAddressField = value;
                    this.RaisePropertyChanged("HomeAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeAddress {
            get {
                return this.OfficeAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeAddressField, value) != true)) {
                    this.OfficeAddressField = value;
                    this.RaisePropertyChanged("OfficeAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficePhone {
            get {
                return this.OfficePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficePhoneField, value) != true)) {
                    this.OfficePhoneField = value;
                    this.RaisePropertyChanged("OfficePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Physician_Directory.ServiceReference1.Physician Physician {
            get {
                return this.PhysicianField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianField, value) != true)) {
                    this.PhysicianField = value;
                    this.RaisePropertyChanged("Physician");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Specialization", Namespace="http://schemas.datacontract.org/2004/07/PhysicianDirectoryService")]
    [System.SerializableAttribute()]
    public partial class Specialization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Physician_Directory.ServiceReference1.Physician PhysicianField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Physician_Directory.ServiceReference1.Physician Physician {
            get {
                return this.PhysicianField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianField, value) != true)) {
                    this.PhysicianField = value;
                    this.RaisePropertyChanged("Physician");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMyService")]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetPhysician", ReplyAction="http://tempuri.org/IMyService/GetPhysicianResponse")]
        Physician_Directory.ServiceReference1.Physician[] GetPhysician();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetPhysician", ReplyAction="http://tempuri.org/IMyService/GetPhysicianResponse")]
        System.Threading.Tasks.Task<Physician_Directory.ServiceReference1.Physician[]> GetPhysicianAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddPhysician", ReplyAction="http://tempuri.org/IMyService/AddPhysicianResponse")]
        int AddPhysician(
                    string HomeAddress, 
                    string HomePhone, 
                    string OfficeAddress, 
                    string OfficePhone, 
                    string EmailAddress, 
                    string CellphoneNumber, 
                    string Name, 
                    string Description, 
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    System.Nullable<double> Weight, 
                    System.Nullable<double> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddPhysician", ReplyAction="http://tempuri.org/IMyService/AddPhysicianResponse")]
        System.Threading.Tasks.Task<int> AddPhysicianAsync(
                    string HomeAddress, 
                    string HomePhone, 
                    string OfficeAddress, 
                    string OfficePhone, 
                    string EmailAddress, 
                    string CellphoneNumber, 
                    string Name, 
                    string Description, 
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    System.Nullable<double> Weight, 
                    System.Nullable<double> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetPhysicianById", ReplyAction="http://tempuri.org/IMyService/GetPhysicianByIdResponse")]
        Physician_Directory.ServiceReference1.Physician GetPhysicianById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetPhysicianById", ReplyAction="http://tempuri.org/IMyService/GetPhysicianByIdResponse")]
        System.Threading.Tasks.Task<Physician_Directory.ServiceReference1.Physician> GetPhysicianByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdatePhysician", ReplyAction="http://tempuri.org/IMyService/UpdatePhysicianResponse")]
        int UpdatePhysician(
                    string HomeAddress, 
                    string HomePhone, 
                    string OfficeAddress, 
                    string OfficePhone, 
                    string EmailAddress, 
                    string CellphoneNumber, 
                    string Name, 
                    string Description, 
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    System.Nullable<double> Weight, 
                    System.Nullable<double> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdatePhysician", ReplyAction="http://tempuri.org/IMyService/UpdatePhysicianResponse")]
        System.Threading.Tasks.Task<int> UpdatePhysicianAsync(
                    string HomeAddress, 
                    string HomePhone, 
                    string OfficeAddress, 
                    string OfficePhone, 
                    string EmailAddress, 
                    string CellphoneNumber, 
                    string Name, 
                    string Description, 
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    System.Nullable<double> Weight, 
                    System.Nullable<double> Height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeletePhysicianById", ReplyAction="http://tempuri.org/IMyService/DeletePhysicianByIdResponse")]
        int DeletePhysicianById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeletePhysicianById", ReplyAction="http://tempuri.org/IMyService/DeletePhysicianByIdResponse")]
        System.Threading.Tasks.Task<int> DeletePhysicianByIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetPhysicianByName", ReplyAction="http://tempuri.org/IMyService/GetPhysicianByNameResponse")]
        Physician_Directory.ServiceReference1.Physician[] GetPhysicianByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetPhysicianByName", ReplyAction="http://tempuri.org/IMyService/GetPhysicianByNameResponse")]
        System.Threading.Tasks.Task<Physician_Directory.ServiceReference1.Physician[]> GetPhysicianByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : Physician_Directory.ServiceReference1.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.ClientBase<Physician_Directory.ServiceReference1.IMyService>, Physician_Directory.ServiceReference1.IMyService {
        
        public MyServiceClient() {
        }
        
        public MyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Physician_Directory.ServiceReference1.Physician[] GetPhysician() {
            return base.Channel.GetPhysician();
        }
        
        public System.Threading.Tasks.Task<Physician_Directory.ServiceReference1.Physician[]> GetPhysicianAsync() {
            return base.Channel.GetPhysicianAsync();
        }
        
        public int AddPhysician(
                    string HomeAddress, 
                    string HomePhone, 
                    string OfficeAddress, 
                    string OfficePhone, 
                    string EmailAddress, 
                    string CellphoneNumber, 
                    string Name, 
                    string Description, 
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    System.Nullable<double> Weight, 
                    System.Nullable<double> Height) {
            return base.Channel.AddPhysician(HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAddress, CellphoneNumber, Name, Description, Id, FirstName, MiddleName, LastName, BirthDate, Gender, Weight, Height);
        }
        
        public System.Threading.Tasks.Task<int> AddPhysicianAsync(
                    string HomeAddress, 
                    string HomePhone, 
                    string OfficeAddress, 
                    string OfficePhone, 
                    string EmailAddress, 
                    string CellphoneNumber, 
                    string Name, 
                    string Description, 
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    System.Nullable<double> Weight, 
                    System.Nullable<double> Height) {
            return base.Channel.AddPhysicianAsync(HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAddress, CellphoneNumber, Name, Description, Id, FirstName, MiddleName, LastName, BirthDate, Gender, Weight, Height);
        }
        
        public Physician_Directory.ServiceReference1.Physician GetPhysicianById(int id) {
            return base.Channel.GetPhysicianById(id);
        }
        
        public System.Threading.Tasks.Task<Physician_Directory.ServiceReference1.Physician> GetPhysicianByIdAsync(int id) {
            return base.Channel.GetPhysicianByIdAsync(id);
        }
        
        public int UpdatePhysician(
                    string HomeAddress, 
                    string HomePhone, 
                    string OfficeAddress, 
                    string OfficePhone, 
                    string EmailAddress, 
                    string CellphoneNumber, 
                    string Name, 
                    string Description, 
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    System.Nullable<double> Weight, 
                    System.Nullable<double> Height) {
            return base.Channel.UpdatePhysician(HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAddress, CellphoneNumber, Name, Description, Id, FirstName, MiddleName, LastName, BirthDate, Gender, Weight, Height);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePhysicianAsync(
                    string HomeAddress, 
                    string HomePhone, 
                    string OfficeAddress, 
                    string OfficePhone, 
                    string EmailAddress, 
                    string CellphoneNumber, 
                    string Name, 
                    string Description, 
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    System.Nullable<double> Weight, 
                    System.Nullable<double> Height) {
            return base.Channel.UpdatePhysicianAsync(HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAddress, CellphoneNumber, Name, Description, Id, FirstName, MiddleName, LastName, BirthDate, Gender, Weight, Height);
        }
        
        public int DeletePhysicianById(int Id) {
            return base.Channel.DeletePhysicianById(Id);
        }
        
        public System.Threading.Tasks.Task<int> DeletePhysicianByIdAsync(int Id) {
            return base.Channel.DeletePhysicianByIdAsync(Id);
        }
        
        public Physician_Directory.ServiceReference1.Physician[] GetPhysicianByName(string name) {
            return base.Channel.GetPhysicianByName(name);
        }
        
        public System.Threading.Tasks.Task<Physician_Directory.ServiceReference1.Physician[]> GetPhysicianByNameAsync(string name) {
            return base.Channel.GetPhysicianByNameAsync(name);
        }
    }
}
