@model Physician_Directory.Models.Specialization


@Styles.Render("~/Content/CreatePhysician.css")


    @using (Html.BeginForm("AddSpecialization", "Physician", FormMethod.Post)) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            
            <div class="add-physician-info">
                <h4 class="physician-info-label">Add Specialization </h4>
            </div>
            
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @maxlength = 30 } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @maxlength = 500 } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
    

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="prevBtn" value="Previous" class="previous-button" formnovalidate/>
                    <input type="submit" name="submit" value="Submit" class="next-submit-button" />

                </div>
            </div>

        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "back-to-list-button" })
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}