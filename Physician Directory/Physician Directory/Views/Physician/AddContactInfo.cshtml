@model Physician_Directory.Models.ContactInfo

@Styles.Render("~/Content/CreatePhysician.css")





    @using (Html.BeginForm("AddContactInfo", "Physician", FormMethod.Post)) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
             <div class="add-physician-info">
                <h4 class="physician-info-label">Add Contact Information </h4>
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
           
    
            <div class="form-group">
                @Html.LabelFor(model => model.HomeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HomeAddress, new { htmlAttributes = new { @class = "form-control", @maxlength = 200 } })
                    @Html.ValidationMessageFor(model => model.HomeAddress, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control", @placeholder = "11 digit number", @maxlength = 11 } })
                    @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.OfficeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OfficeAddress, new { htmlAttributes = new { @class = "form-control", @maxlength = 200 } })
                    @Html.ValidationMessageFor(model => model.OfficeAddress, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.OfficePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OfficePhone, new { htmlAttributes = new { @class = "form-control", @placeholder = "11 digit number", @maxlength = 11 } })
                    @Html.ValidationMessageFor(model => model.OfficePhone, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @maxlength = 50 } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.CellphoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CellphoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "11 digit number", @maxlength = 11 } })
                    @Html.ValidationMessageFor(model => model.CellphoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="prevBtn" value="Previous" class="previous-button" formnovalidate/>
                    <input type="submit" name="nextBtn" value="Next" class="next-submit-button" />

                </div>
            </div>

        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index",null, new { @class = "back-to-list-button" })
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}